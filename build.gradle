apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.5
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile group:'org.zeromq', name: 'jeromq', version: '0.3.4'
    compile group:'com.google.guava', name: 'guava', version: '17.0'
    compile group:'org.apache.commons', name: 'commons-lang3', version: '3.1'
    compile group:'org.apache.logging.log4j', name:'log4j-core', version: '2.0-beta4'
    compile group:'org.apache.logging.log4j', name:'log4j-api', version: '2.0-beta4'
    compile group:'org.iq80.leveldb', name: 'leveldb', version: "0.7"
    compile group:'org.apache.commons', name:'commons-math3', version: "3.3"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task copyJars(type: Copy) {
    from configurations.runtime
    into 'build/libs'
}

mainClassName = "com.petuum.app"
applicationDefaultJvmArgs = []


def scripts = [ 'MatrixFact': 'com.petuum.app.MatrixFact',
                'ITML':'com.petuum.app.metriclearn.ITML']

scripts.each() { scriptName, className ->
    def t = tasks.create(name: scriptName+'StartScript', type: CreateStartScripts) {
        mainClassName = className
        applicationName = scriptName
        outputDir = new File(project.buildDir, 'scripts')
        classpath = jar.outputs.files + project.configurations.runtime
    }

    def r = tasks.create(name: 'run'+scriptName, type: org.gradle.api.tasks.JavaExec) {
        main className
        classpath = jar.outputs.files + project.configurations.runtime
    }
    applicationDistribution.into("bin") {
        from(t)
        fileMode = 0755  
    }
    run.dependsOn(r)
    startScripts.dependsOn(t)
}